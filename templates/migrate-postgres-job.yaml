{{ if .Values.dbMigration }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "genomicsdb.fullname" . }}-migrate"
  labels:
    {{- include "genomicsdb.labels" . | nindent 4 }}
data:
  migrate.sh: |
    #!/bin/bash
    
    # bash strict mode
    set -euo pipefail
    IFS=$'\n\t'
    
    # OLDHOST and PGDATABASE need to have been set as environment variables
    export PGPASSWORD=$POSTGRESQL_PASSWORD
    export PGUSER=${PGUSER:=postgres}
    
    # copy "globals" (users/roles)
    # exclude the 'postgres' user since that one was defined with initdb
    pg_dumpall -h $OLDHOST -U postgres -g | grep -v 'ROLE postgres' | psql -d postgres
    
    # increase max_wal_size (temporarily) since we're about to do a lot of inserts
    psql -d postgres <<EOSQL
    ALTER SYSTEM SET max_wal_size TO '8GB';
    SELECT pg_reload_conf();
    EOSQL
    
    pg_dump -Fc -h $OLDHOST $PGDATABASE | pg_restore -C -v -d postgres
    
    # reset the max_wal_size
    psql -d postgres <<EOSQL
    ALTER SYSTEM SET max_wal_size TO DEFAULT;
    SELECT pg_reload_conf();
    EOSQL
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "genomicsdb.fullname" . }}-migrate"
  labels:
    {{- include "genomicsdb.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: "{{ include "genomicsdb.fullname" . }}-migrate"
    spec:
      containers:
      - name: loader-container
        image: "{{ .Values.image.repository}}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /migrate.sh
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        - name: PGHOST
          value: {{ include "genomicsdb.fullname" . }}
        - name: PGPORT
          value: "{{ .Values.service.port }}"
        - name: PGUSER
          value: {{ .Values.adminuser }}
        - name: OLDHOST
          value: {{ .Values.dbMigration.host | quote }}
        - name: PGDATABASE
          value: {{ .Values.dbMigration.database | quote }}
        envFrom:
          - secretRef:
              name: "{{ include "genomicsdb.fullname" . }}-password"
        volumeMounts:
        - mountPath:  migrate.sh
          name: "migrate-script"
          subPath: "migrate.sh"
      restartPolicy: OnFailure
      volumes:
      - name: migrate-script
        configMap:
          name: "{{ include "genomicsdb.fullname" . }}-migrate"
          defaultMode: 0777
{{ end }}
